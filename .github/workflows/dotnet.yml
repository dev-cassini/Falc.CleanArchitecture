name: release

on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published

env:
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  create_nuget_package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Get all history to allow automatic versioning using MinVer

    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Create the NuGet package in the folder from the environment variable NuGetDirectory
    - run: dotnet pack ./src/Falc.CleanArchitecture.Infrastructure/ --configuration Release --output ${{ env.NuGetDirectory }}

    # Publish the NuGet package as an artifact, so they can be used in the following jobs
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  push_to_personal_github_packages:
    runs-on: ubuntu-latest
    needs: create_nuget_package
    steps:
      # Download the NuGet package created in the previous job
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      # Install the .NET SDK indicated in the global.json file
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4

      # Publish all NuGet packages to personal GitHub Packages
      - name: Publish NuGet package
        run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg --api-key ${{ secrets.PUBLIC_ACCESS_TOKEN }} --source https://nuget.pkg.github.com/dev-cassini/index.json
